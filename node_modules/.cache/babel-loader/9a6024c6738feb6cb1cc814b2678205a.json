{"ast":null,"code":"var _jsxFileName = \"/home/krkdkt029/Desktop/netlifydemo/src/components/read/read.js\";\nimport React, { Component } from 'react';\nimport ReactTable from \"react-table\";\nimport Datatable from \"react-bs-datatable\"; // import Pagination from \"react-js-pagination\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Userdaata extends Component {\n  componentDidMount() {\n    this.fetchAll();\n  }\n\n  constructor(props) {\n    super(props);\n    this.header = [];\n    this.state = {\n      data: [],\n      activePage: 1\n    };\n    this.fetchAll = this.fetchAll.bind(this);\n  }\n\n  fetchAll() {\n    fetch('http://localhost:8888/.netlify/functions/fetchAll').then(response => response.json()).then(data => {\n      this.setState({\n        data: data\n      });\n    });\n  }\n\n  renderTableData() {\n    return this.state.data.map((student, index) => {\n      console.log(student, 'st');\n      const {\n        name,\n        email\n      } = student; //destructuring\n\n      console.log(name, email);\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 16\n        }, this)]\n      }, email, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"title\",\n        children: \"React Dynamic Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"students\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.renderTableData()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 8\n    }, this);\n  } // render() {\n  //   const customLabels = {\n  //     first: \"<<\",\n  //     last: \">>\",\n  //     prev: \"prev\",\n  //     next: \"next\",\n  //     show: \"Display\",\n  //     entries: \"rows\",\n  //     noResults: \"There is no data available\"\n  //   };\n  //   this.header = [\n  //       { title: \"Name\", prop: \"name\" },\n  //       { title: \"Email\", prop: \"Email\" }\n  //   ];\n  //   let userData;\n  //   let name='';\n  //   let Email = '';\n  //   userData = this.state.data.length>0\n  //   ? \n  //     this.state.data.map((item, i) => {\n  //     if(item.data['name'])\n  //     {\n  //       name=item.data['name'];\n  //     }\n  //     if(item.data['email'])\n  //     {\n  //       Email=item.data['email']\n  //     }\n  //     return {\n  //       name:name,\n  //       Email:Email\n  //     };\n  //     }):\"\";\n  //   return (\n  //         <div className={\"table-responsive\"}>\n  //           {this.renderTableData()}\n  //           {/* {this.state.data.length > 0 && (\n  //             <Datatable\n  //               tableHeader={this.header}\n  //               tableBody={userData}\n  //               keyName=\"crudtable\"\n  //               rowsPerPageOption={10}\n  //               tableClass=\"striped hover responsive tablecolor relateAlign\"\n  //               initialSort={{ prop: \"name\", isAscending: true }}\n  //               labels={customLabels}\n  //                 // onSort={onSort}\n  //             />\n  //           )} */}\n  //         </div>\n  //   )\n  // }\n\n\n}","map":{"version":3,"sources":["/home/krkdkt029/Desktop/netlifydemo/src/components/read/read.js"],"names":["React","Component","ReactTable","Datatable","Userdaata","componentDidMount","fetchAll","constructor","props","header","state","data","activePage","bind","fetch","then","response","json","setState","renderTableData","map","student","index","console","log","name","email","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,SAAP,MAAsB,oBAAtB,C,CACA;;;AAEA,eAAe,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAC7CI,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,QAAL;AACD;;AACDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAC,EAAP;AAAUC,MAAAA,UAAU,EAAC;AAArB,KAAb;AACA,SAAKN,QAAL,GAAgB,KAAKA,QAAL,CAAcO,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AACDP,EAAAA,QAAQ,GAAE;AACNQ,IAAAA,KAAK,CAAC,mDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMJ,IAAI,IAAI;AACb,WAAKO,QAAL,CAAc;AAACP,QAAAA,IAAI,EAACA;AAAN,OAAd;AACA,KAJD;AAKH;;AAEDQ,EAAAA,eAAe,GAAG;AAChB,WAAO,KAAKT,KAAL,CAAWC,IAAX,CAAgBS,GAAhB,CAAoB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC7CC,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAAoB,IAApB;AACC,YAAM;AAAEI,QAAAA,IAAF;AAAOC,QAAAA;AAAP,UAAiBL,OAAvB,CAF4C,CAEb;;AAC/BE,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ,EAAiBC,KAAjB;AACA,0BACG;AAAA,gCACG;AAAA,oBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAA,oBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA,SAASA,KAAT;AAAA;AAAA;AAAA;AAAA,cADH;AAMF,KAVM,CAAP;AAWF;;AAEDC,EAAAA,MAAM,GAAG;AACR,wBACG;AAAA,8BACG;AAAI,QAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAO,QAAA,EAAE,EAAC,UAAV;AAAA,+BACG;AAAA,oBACI,KAAKR,eAAL;AADJ;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AAUF,GA3C+C,CA4C/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA/F+C","sourcesContent":["import React, { Component } from 'react'\nimport ReactTable from \"react-table\";  \nimport Datatable from \"react-bs-datatable\";\n// import Pagination from \"react-js-pagination\";\n\nexport default class Userdaata extends Component {\n    componentDidMount(){\n      this.fetchAll();\n    }\n    constructor(props){\n        super(props)\n        this.header = [];\n        this.state = { data:[],activePage:1}\n        this.fetchAll = this.fetchAll.bind(this);\n    }\n    fetchAll(){\n        fetch('http://localhost:8888/.netlify/functions/fetchAll')\n        .then(response => response.json())\n        .then(data => {\n         this.setState({data:data})\n        });\n    }\n \n    renderTableData() {\n      return this.state.data.map((student, index) => {\n        console.log(student,'st')\n         const { name,email } = student //destructuring\n         console.log(name,email)\n         return (\n            <tr key={email}>\n               <td>{name}</td>\n               <td>{email}</td>\n            </tr>\n         )\n      })\n   }\n\n   render() {\n    return (\n       <div>\n          <h1 id='title'>React Dynamic Table</h1>\n          <table id='students'>\n             <tbody>\n                {this.renderTableData()}\n             </tbody>\n          </table>\n       </div>\n    )\n }\n  // render() {\n  //   const customLabels = {\n  //     first: \"<<\",\n  //     last: \">>\",\n  //     prev: \"prev\",\n  //     next: \"next\",\n  //     show: \"Display\",\n  //     entries: \"rows\",\n  //     noResults: \"There is no data available\"\n  //   };\n  //   this.header = [\n  //       { title: \"Name\", prop: \"name\" },\n  //       { title: \"Email\", prop: \"Email\" }\n  //   ];\n  //   let userData;\n  //   let name='';\n  //   let Email = '';\n  //   userData = this.state.data.length>0\n  //   ? \n  //     this.state.data.map((item, i) => {\n  //     if(item.data['name'])\n  //     {\n  //       name=item.data['name'];\n  //     }\n  //     if(item.data['email'])\n  //     {\n  //       Email=item.data['email']\n  //     }\n  //     return {\n  //       name:name,\n  //       Email:Email\n  //     };\n  //     }):\"\";\n      \n  //   return (\n  //         <div className={\"table-responsive\"}>\n  //           {this.renderTableData()}\n  //           {/* {this.state.data.length > 0 && (\n  //             <Datatable\n  //               tableHeader={this.header}\n  //               tableBody={userData}\n  //               keyName=\"crudtable\"\n  //               rowsPerPageOption={10}\n  //               tableClass=\"striped hover responsive tablecolor relateAlign\"\n  //               initialSort={{ prop: \"name\", isAscending: true }}\n  //               labels={customLabels}\n  //                 // onSort={onSort}\n  //             />\n  //           )} */}\n  //         </div>\n  //   )\n  // }\n}\n"]},"metadata":{},"sourceType":"module"}