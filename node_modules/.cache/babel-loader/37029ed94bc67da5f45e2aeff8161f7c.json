{"ast":null,"code":"var _jsxFileName = \"/home/krkdkt029/Desktop/netlifydemo/src/components/read/read.js\";\nimport React, { Component } from 'react';\nimport ReactTable from \"react-table\";\nimport Datatable from \"react-bs-datatable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Userdaata extends Component {\n  componentDidMount() {\n    this.fetchAll();\n  }\n\n  constructor(props) {\n    super(props);\n    this.header = [];\n    this.state = {\n      data: ''\n    };\n    this.fetchAll = this.fetchAll.bind(this);\n  }\n\n  fetchAll() {\n    fetch('http://localhost:8888/.netlify/functions/fetchAll').then(response => response.json()).then(data => {\n      console.log(data[0].data['name']);\n      console.log(data.length);\n      this.setState({\n        data: data\n      });\n    });\n  }\n\n  render() {\n    const customLabels = {\n      first: \"<<\",\n      last: \">>\",\n      prev: \"prev\",\n      next: \"next\",\n      show: \"Display\",\n      entries: \"rows\",\n      noResults: \"There is no data available\"\n    };\n    this.header = [{\n      title: \"Name\",\n      prop: \"selectOption\"\n    }, {\n      title: \"Email\",\n      prop: \"fileNames\",\n      sortable: true,\n      filterable: true\n    }];\n    let userData;\n    let name = '';\n    let Email = '';\n    userData = this.state.data.length > 0 ? this.state.data.map((item, i) => {\n      name = item.data['name'];\n      Email = item.data['email'];\n      return {\n        name: name,\n        Email: Email\n      };\n    }) : '';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Datatable, {\n        tableHeader: this.header,\n        tableBody: userData,\n        keyName: \"relateTable\",\n        rowsPerPageOption: 0,\n        tableClass: \"striped hover responsive tablecolor relateAlign\",\n        initialSort: {\n          prop: \"Title\",\n          isAscending: true\n        } // labels={customLabels}\n        //   onSort={onSort}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/krkdkt029/Desktop/netlifydemo/src/components/read/read.js"],"names":["React","Component","ReactTable","Datatable","Userdaata","componentDidMount","fetchAll","constructor","props","header","state","data","bind","fetch","then","response","json","console","log","length","setState","render","customLabels","first","last","prev","next","show","entries","noResults","title","prop","sortable","filterable","userData","name","Email","map","item","i","isAscending"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,eAAe,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAC7CI,EAAAA,iBAAiB,GAAE;AAChB,SAAKC,QAAL;AACF;;AACDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAC;AAAP,KAAb;AACA,SAAKL,QAAL,GAAgB,KAAKA,QAAL,CAAcM,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEDN,EAAAA,QAAQ,GAAE;AACNO,IAAAA,KAAK,CAAC,mDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMH,IAAI,IAAI;AACbM,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAR,CAAa,MAAb,CAAZ;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACQ,MAAjB;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,IAAI,EAACA;AAAN,OAAd;AACA,KAND;AAOH;;AAEHU,EAAAA,MAAM,GAAG;AAEP,UAAMC,YAAY,GAAG;AACnBC,MAAAA,KAAK,EAAE,IADY;AAEnBC,MAAAA,IAAI,EAAE,IAFa;AAGnBC,MAAAA,IAAI,EAAE,MAHa;AAInBC,MAAAA,IAAI,EAAE,MAJa;AAKnBC,MAAAA,IAAI,EAAE,SALa;AAMnBC,MAAAA,OAAO,EAAE,MANU;AAOnBC,MAAAA,SAAS,EAAE;AAPQ,KAArB;AASA,SAAKpB,MAAL,GAAc,CACV;AAAEqB,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,IAAI,EAAE;AAAvB,KADU,EAEV;AAAED,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,IAAI,EAAE,WAAxB;AAAqCC,MAAAA,QAAQ,EAAE,IAA/C;AAAqDC,MAAAA,UAAU,EAAE;AAAjE,KAFU,CAAd;AAIA,QAAIC,QAAJ;AACA,QAAIC,IAAI,GAAC,EAAT;AACA,QAAIC,KAAK,GAAG,EAAZ;AACAF,IAAAA,QAAQ,GAAG,KAAKxB,KAAL,CAAWC,IAAX,CAAgBQ,MAAhB,GAAuB,CAAvB,GACT,KAAKT,KAAL,CAAWC,IAAX,CAAgB0B,GAAhB,CAAoB,CAACC,IAAD,EAAOC,CAAP,KAAa;AACjCJ,MAAAA,IAAI,GAACG,IAAI,CAAC3B,IAAL,CAAU,MAAV,CAAL;AACAyB,MAAAA,KAAK,GAACE,IAAI,CAAC3B,IAAL,CAAU,OAAV,CAAN;AACA,aAAO;AACLwB,QAAAA,IAAI,EAACA,IADA;AAELC,QAAAA,KAAK,EAACA;AAFD,OAAP;AAID,KAPC,CADS,GAQR,EARH;AASA,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACE,QAAC,SAAD;AACI,QAAA,WAAW,EAAE,KAAK3B,MADtB;AAEI,QAAA,SAAS,EAAEyB,QAFf;AAGI,QAAA,OAAO,EAAC,aAHZ;AAII,QAAA,iBAAiB,EAAE,CAJvB;AAKI,QAAA,UAAU,EAAC,iDALf;AAMI,QAAA,WAAW,EAAE;AAAEH,UAAAA,IAAI,EAAE,OAAR;AAAiBS,UAAAA,WAAW,EAAE;AAA9B,SANjB,CAOI;AACI;;AARR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AA9D8C","sourcesContent":["import React, { Component } from 'react'\nimport ReactTable from \"react-table\";  \nimport Datatable from \"react-bs-datatable\";\n\nexport default class Userdaata extends Component {\n    componentDidMount(){\n       this.fetchAll();\n    }\n    constructor(props){\n        super(props)\n        this.header = [];\n        this.state = { data:''}\n        this.fetchAll = this.fetchAll.bind(this);\n    }\n\n    fetchAll(){\n        fetch('http://localhost:8888/.netlify/functions/fetchAll')\n        .then(response => response.json())\n        .then(data => {\n         console.log(data[0].data['name'])\n         console.log(data.length)\n         this.setState({data:data})\n        });\n    }\n \n  render() {\n    \n    const customLabels = {\n      first: \"<<\",\n      last: \">>\",\n      prev: \"prev\",\n      next: \"next\",\n      show: \"Display\",\n      entries: \"rows\",\n      noResults: \"There is no data available\"\n    };\n    this.header = [\n        { title: \"Name\", prop: \"selectOption\" },\n        { title: \"Email\", prop: \"fileNames\", sortable: true, filterable: true },\n    ];\n    let userData;\n    let name='';\n    let Email = '';\n    userData = this.state.data.length>0\n    ? this.state.data.map((item, i) => {\n      name=item.data['name'];\n      Email=item.data['email']\n      return {\n        name:name,\n        Email:Email\n      };\n    }):''\n    return (\n      <div className='settings-wrapper'>\n        <Datatable\n            tableHeader={this.header}\n            tableBody={userData}\n            keyName=\"relateTable\"\n            rowsPerPageOption={0}\n            tableClass=\"striped hover responsive tablecolor relateAlign\"\n            initialSort={{ prop: \"Title\", isAscending: true }}\n            // labels={customLabels}\n                //   onSort={onSort}\n        />\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}