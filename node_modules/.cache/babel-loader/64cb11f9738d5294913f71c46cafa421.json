{"ast":null,"code":"var _jsxFileName = \"/home/krkdkt029/Desktop/netlifydemo/src/components/read/read.js\";\nimport React, { Component } from 'react';\nimport ReactTable from \"react-table\";\nimport Datatable from \"react-bs-datatable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Userdaata extends Component {\n  componentDidMount() {\n    this.fetchAll();\n  }\n\n  constructor(props) {\n    super(props);\n    this.header = [];\n    this.state = {\n      data: '',\n      activePage: 1\n    };\n    this.fetchAll = this.fetchAll.bind(this);\n  }\n\n  fetchAll() {\n    fetch('http://localhost:8888/.netlify/functions/fetchAll').then(response => response.json()).then(data => {\n      this.setState({\n        data: data\n      });\n    });\n  }\n\n  render() {\n    // console.log(this.state.data)\n    const customLabels = {\n      first: \"<<\",\n      last: \">>\",\n      prev: \"prev\",\n      next: \"next\",\n      show: \"Display\",\n      entries: \"rows\",\n      noResults: \"There is no data available\"\n    };\n    this.header = [{\n      title: \"Name\",\n      prop: \"name\"\n    }, {\n      title: \"Email\",\n      prop: \"Email\"\n    }];\n    let userData;\n    let name = '';\n    let Email = '';\n    let userDetails = this.state.data;\n    console.log(userDetails, 'userdfg');\n    userData = this.state.data.length > 0 ? this.state.data.map((item, i) => {\n      if (item.data['name']) {\n        name = item.data['name'];\n      }\n\n      if (item.data['email']) {\n        Email = item.data['email'];\n      }\n\n      return {\n        name: name,\n        Email: Email\n      };\n    }) : \"\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: this.state.data.length > 0 && /*#__PURE__*/_jsxDEV(Datatable, {\n          tableHeader: this.header,\n          tableBody: userData,\n          keyName: \"relateTable\",\n          rowsPerPageOption: 0,\n          tableClass: \"striped hover responsive tablecolor relateAlign\",\n          initialSort: {\n            prop: \"Title\",\n            isAscending: true\n          },\n          labels: customLabels // onSort={onSort}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/krkdkt029/Desktop/netlifydemo/src/components/read/read.js"],"names":["React","Component","ReactTable","Datatable","Userdaata","componentDidMount","fetchAll","constructor","props","header","state","data","activePage","bind","fetch","then","response","json","setState","render","customLabels","first","last","prev","next","show","entries","noResults","title","prop","userData","name","Email","userDetails","console","log","length","map","item","i","isAscending"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ReactTable from \"react-table\";  \nimport Datatable from \"react-bs-datatable\";\n\nexport default class Userdaata extends Component {\n    componentDidMount(){\n        this.fetchAll();\n    }\n    constructor(props){\n        super(props)\n        this.header = [];\n        this.state = { data:'',activePage:1}\n        this.fetchAll = this.fetchAll.bind(this);\n    }\n\n    fetchAll(){\n        fetch('http://localhost:8888/.netlify/functions/fetchAll')\n        .then(response => response.json())\n        .then(data => {\n         this.setState({data:data})\n        });\n    }\n \n  render() {\n    // console.log(this.state.data)\n    const customLabels = {\n      first: \"<<\",\n      last: \">>\",\n      prev: \"prev\",\n      next: \"next\",\n      show: \"Display\",\n      entries: \"rows\",\n      noResults: \"There is no data available\"\n    };\n    this.header = [\n        { title: \"Name\", prop: \"name\" },\n        { title: \"Email\", prop: \"Email\" }\n    ];\n    let userData;\n    let name='';\n    let Email = '';\n    let userDetails = this.state.data;\n    console.log(userDetails,'userdfg')\n    userData = this.state.data.length>0\n    ? \n      this.state.data.map((item, i) => {\n      if(item.data['name'])\n      {\n        name=item.data['name'];\n      }\n      if(item.data['email'])\n      {\n        Email=item.data['email']\n      }\n      return {\n        name:name,\n        Email:Email\n      };\n      }):\"\";\n    return (\n      <div>\n        <div className={\"table-responsive\"}>\n            {this.state.data.length > 0 && (\n              <Datatable\n                tableHeader={this.header}\n                tableBody={userData}\n                keyName=\"relateTable\"\n                rowsPerPageOption={0}\n                tableClass=\"striped hover responsive tablecolor relateAlign\"\n                initialSort={{ prop: \"Title\", isAscending: true }}\n                labels={customLabels}\n                  // onSort={onSort}\n              />\n            )}\n          </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}