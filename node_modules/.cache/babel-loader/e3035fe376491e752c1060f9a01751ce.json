{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PaginationOptsGroup = void 0;\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar object_1 = require(\"./helpers/object\");\n\nvar Form_1 = __importDefault(require(\"react-bootstrap/Form\"));\n\nfunction PaginationOptsGroup(_a) {\n  var classes = _a.classes,\n      labels = _a.labels,\n      value = _a.value,\n      onChange = _a.onChange,\n      options = _a.options;\n  return react_1.default.createElement(Form_1.default, {\n    inline: true,\n    className: object_1.makeClasses('paginationOpts__root', classes.paginationOptsForm)\n  }, react_1.default.createElement(Form_1.default.Group, {\n    controlId: \"formGroupPagination\",\n    className: classes.paginationOptsFormGroup\n  }, react_1.default.createElement(\"span\", {\n    className: classes.paginationOptsFormText\n  }, labels.show || 'Show', ' '), react_1.default.createElement(Form_1.default.Control, {\n    name: \"form-control-pagination\",\n    defaultValue: value,\n    as: \"select\",\n    placeholder: \"select\",\n    onChange: onChange,\n    className: classes.paginationOptsFormControl\n  }, options.map(function (option, idx) {\n    var optionProps = {\n      key: \"page-opt-\" + option,\n      value: option\n    };\n    return react_1.default.createElement(\"option\", __assign({}, optionProps), option);\n  })), react_1.default.createElement(\"span\", {\n    className: classes.paginationOptsFormText\n  }, ' ', labels.entries || 'entries')));\n}\n\nexports.PaginationOptsGroup = PaginationOptsGroup;\n\nfunction PaginationOpts(_a) {\n  var labels = _a.labels,\n      rowsPerPage = _a.rowsPerPage,\n      rowsPerPageOption = _a.rowsPerPageOption,\n      onRowsPerPageChange = _a.onRowsPerPageChange,\n      classes = _a.classes,\n      CustomPaginationOptsGroup = _a.CustomPaginationOptsGroup;\n\n  function onRowsPerPageChangeHandler(e) {\n    onRowsPerPageChange(Number(e.target.value));\n  }\n\n  var renderedElements = null;\n\n  if (rowsPerPage !== undefined) {\n    var opts_1 = [rowsPerPage]; // Make sure there are no duplicates being pushed.\n\n    if (rowsPerPageOption !== undefined) {\n      rowsPerPageOption.forEach(function (opt) {\n        if (!opts_1.includes(opt) && typeof opt === 'number') {\n          opts_1.push(opt);\n        }\n      }); // Order the pagination options ascending.\n\n      opts_1 = opts_1.sort(function (a, b) {\n        if (a < b) {\n          return -1;\n        } else if (a > b) {\n          return 1;\n        }\n\n        return 0;\n      });\n    } // Only render option if the length is more than 1.\n\n\n    if (opts_1.length > 1) {\n      var UsedPaginationOpts = CustomPaginationOptsGroup || PaginationOptsGroup;\n      renderedElements = react_1.default.createElement(UsedPaginationOpts, {\n        classes: classes,\n        labels: labels,\n        onChange: onRowsPerPageChangeHandler,\n        options: opts_1,\n        value: rowsPerPage\n      });\n    }\n  }\n\n  return renderedElements;\n}\n\nexports.default = PaginationOpts;","map":{"version":3,"sources":["../src/PaginationOpts.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAGA,IAAA,QAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;;AAUA,SAAgB,mBAAhB,CAAoC,EAApC,EAM2B;MALzB,OAAO,GAAA,EAAA,CAAA,O;MACP,MAAM,GAAA,EAAA,CAAA,M;MACN,KAAK,GAAA,EAAA,CAAA,K;MACL,QAAQ,GAAA,EAAA,CAAA,Q;MACR,OAAO,GAAA,EAAA,CAAA,O;AAEP,SACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,MAAA,CAAA,OAAD,EAAK;AACH,IAAA,MAAM,EAAA,IADH;AAEH,IAAA,SAAS,EAAE,QAAA,CAAA,WAAA,CACT,sBADS,EAET,OAAO,CAAC,kBAFC;AAFR,GAAL,EAOE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,MAAA,CAAA,OAAA,CAAK,KAAN,EAAW;AACT,IAAA,SAAS,EAAC,qBADD;AAET,IAAA,SAAS,EAAE,OAAO,CAAC;AAFV,GAAX,EAIE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAE,OAAO,CAAC;AAAzB,GAAA,EACG,MAAM,CAAC,IAAP,IAAe,MADlB,EAC0B,GAD1B,CAJF,EAOE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,MAAA,CAAA,OAAA,CAAK,OAAN,EAAa;AACX,IAAA,IAAI,EAAC,yBADM;AAEX,IAAA,YAAY,EAAE,KAFH;AAGX,IAAA,EAAE,EAAC,QAHQ;AAIX,IAAA,WAAW,EAAC,QAJD;AAKX,IAAA,QAAQ,EAAE,QALC;AAMX,IAAA,SAAS,EAAE,OAAO,CAAC;AANR,GAAb,EAQG,OAAO,CAAC,GAAR,CAAY,UAAC,MAAD,EAA6B,GAA7B,EAAwC;AACnD,QAAM,WAAW,GAAG;AAClB,MAAA,GAAG,EAAE,cAAY,MADC;AAElB,MAAA,KAAK,EAAE;AAFW,KAApB;AAKA,WAAO,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,EAAY,WAAZ,CAAA,EAA0B,MAA1B,CAAP;AACD,GAPA,CARH,CAPF,EAwBE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAE,OAAO,CAAC;AAAzB,GAAA,EACG,GADH,EAEG,MAAM,CAAC,OAAP,IAAkB,SAFrB,CAxBF,CAPF,CADF;AAuCD;;AA9CD,OAAA,CAAA,mBAAA,GAAA,mBAAA;;AA6DA,SAAwB,cAAxB,CAAuC,EAAvC,EAOsB;MANpB,MAAM,GAAA,EAAA,CAAA,M;MACN,WAAW,GAAA,EAAA,CAAA,W;MACX,iBAAiB,GAAA,EAAA,CAAA,iB;MACjB,mBAAmB,GAAA,EAAA,CAAA,mB;MACnB,OAAO,GAAA,EAAA,CAAA,O;MACP,yBAAyB,GAAA,EAAA,CAAA,yB;;AAEzB,WAAS,0BAAT,CAAoC,CAApC,EAA0C;AACxC,IAAA,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC,MAAF,CAAS,KAAV,CAAP,CAAnB;AACD;;AAED,MAAI,gBAAgB,GAAG,IAAvB;;AAEA,MAAI,WAAW,KAAK,SAApB,EAA+B;AAC7B,QAAI,MAAI,GAAa,CAAC,WAAD,CAArB,CAD6B,CAG7B;;AACA,QAAI,iBAAiB,KAAK,SAA1B,EAAqC;AACnC,MAAA,iBAAiB,CAAC,OAAlB,CAA0B,UAAA,GAAA,EAAG;AAC3B,YAAI,CAAC,MAAI,CAAC,QAAL,CAAc,GAAd,CAAD,IAAuB,OAAO,GAAP,KAAe,QAA1C,EAAoD;AAClD,UAAA,MAAI,CAAC,IAAL,CAAU,GAAV;AACD;AACF,OAJD,EADmC,CAOnC;;AACA,MAAA,MAAI,GAAG,MAAI,CAAC,IAAL,CAAU,UAAC,CAAD,EAAI,CAAJ,EAAK;AACpB,YAAI,CAAC,GAAG,CAAR,EAAW;AACT,iBAAO,CAAC,CAAR;AACD,SAFD,MAEO,IAAI,CAAC,GAAG,CAAR,EAAW;AAChB,iBAAO,CAAP;AACD;;AAED,eAAO,CAAP;AACD,OARM,CAAP;AASD,KArB4B,CAuB7B;;;AACA,QAAI,MAAI,CAAC,MAAL,GAAc,CAAlB,EAAqB;AACnB,UAAM,kBAAkB,GACtB,yBAAyB,IAAI,mBAD/B;AAGA,MAAA,gBAAgB,GACd,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,kBAAD,EAAmB;AACjB,QAAA,OAAO,EAAE,OADQ;AAEjB,QAAA,MAAM,EAAE,MAFS;AAGjB,QAAA,QAAQ,EAAE,0BAHO;AAIjB,QAAA,OAAO,EAAE,MAJQ;AAKjB,QAAA,KAAK,EAAE;AALU,OAAnB,CADF;AASD;AACF;;AAED,SAAO,gBAAP;AACD;;AAvDD,OAAA,CAAA,OAAA,GAAA,cAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PaginationOptsGroup = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nvar object_1 = require(\"./helpers/object\");\nvar Form_1 = __importDefault(require(\"react-bootstrap/Form\"));\nfunction PaginationOptsGroup(_a) {\n    var classes = _a.classes, labels = _a.labels, value = _a.value, onChange = _a.onChange, options = _a.options;\n    return (react_1.default.createElement(Form_1.default, { inline: true, className: object_1.makeClasses('paginationOpts__root', classes.paginationOptsForm) },\n        react_1.default.createElement(Form_1.default.Group, { controlId: \"formGroupPagination\", className: classes.paginationOptsFormGroup },\n            react_1.default.createElement(\"span\", { className: classes.paginationOptsFormText },\n                labels.show || 'Show',\n                ' '),\n            react_1.default.createElement(Form_1.default.Control, { name: \"form-control-pagination\", defaultValue: value, as: \"select\", placeholder: \"select\", onChange: onChange, className: classes.paginationOptsFormControl }, options.map(function (option, idx) {\n                var optionProps = {\n                    key: \"page-opt-\" + option,\n                    value: option\n                };\n                return react_1.default.createElement(\"option\", __assign({}, optionProps), option);\n            })),\n            react_1.default.createElement(\"span\", { className: classes.paginationOptsFormText },\n                ' ',\n                labels.entries || 'entries'))));\n}\nexports.PaginationOptsGroup = PaginationOptsGroup;\nfunction PaginationOpts(_a) {\n    var labels = _a.labels, rowsPerPage = _a.rowsPerPage, rowsPerPageOption = _a.rowsPerPageOption, onRowsPerPageChange = _a.onRowsPerPageChange, classes = _a.classes, CustomPaginationOptsGroup = _a.CustomPaginationOptsGroup;\n    function onRowsPerPageChangeHandler(e) {\n        onRowsPerPageChange(Number(e.target.value));\n    }\n    var renderedElements = null;\n    if (rowsPerPage !== undefined) {\n        var opts_1 = [rowsPerPage];\n        // Make sure there are no duplicates being pushed.\n        if (rowsPerPageOption !== undefined) {\n            rowsPerPageOption.forEach(function (opt) {\n                if (!opts_1.includes(opt) && typeof opt === 'number') {\n                    opts_1.push(opt);\n                }\n            });\n            // Order the pagination options ascending.\n            opts_1 = opts_1.sort(function (a, b) {\n                if (a < b) {\n                    return -1;\n                }\n                else if (a > b) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n        // Only render option if the length is more than 1.\n        if (opts_1.length > 1) {\n            var UsedPaginationOpts = CustomPaginationOptsGroup || PaginationOptsGroup;\n            renderedElements = (react_1.default.createElement(UsedPaginationOpts, { classes: classes, labels: labels, onChange: onRowsPerPageChangeHandler, options: opts_1, value: rowsPerPage }));\n        }\n    }\n    return renderedElements;\n}\nexports.default = PaginationOpts;\n//# sourceMappingURL=PaginationOpts.js.map"]},"metadata":{},"sourceType":"script"}